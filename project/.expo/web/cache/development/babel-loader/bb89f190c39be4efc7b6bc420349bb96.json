{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/haze/dig4639-mobile-dev/project/screens/HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nvar CONTACT_SCREEN = 0;\nvar ADD_CONTACT_SCREEN = 1;\nvar HEADERS = {\n  'method': 'GET',\n  'headers': {\n    'API': 'botts',\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n};\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      contacts: [],\n      currentScreen: CONTACT_SCREEN,\n      newContactName: '',\n      newContactNum: ''\n    };\n    _this.focusListener = props.navigation.addListener('focus', function () {\n      return _this.componentDidMount();\n    });\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://plato.mrl.ai:8080/contacts', HEADERS).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        _this2.setState({\n          contacts: result.contacts\n        });\n      });\n    }\n  }, {\n    key: \"addContact\",\n    value: function addContact() {\n      var _this3 = this;\n\n      var newHeaders = _objectSpread({}, HEADERS, {\n        method: 'POST',\n        body: JSON.stringify({\n          name: this.state.newContactName,\n          number: this.state.newContactNum\n        })\n      });\n\n      fetch('http://plato.mrl.ai:8080/contacts/add', newHeaders).then(function (response) {\n        return response.json();\n      }).then(function () {\n        return _this3.setState({\n          currentScreen: CONTACT_SCREEN,\n          newContactName: '',\n          newContactNum: ''\n        });\n      });\n      this.componentDidMount();\n    }\n  }, {\n    key: \"removeContact\",\n    value: function removeContact(p) {\n      var _this4 = this;\n\n      var delHeaders = _objectSpread({}, HEADERS, {\n        method: 'POST',\n        body: JSON.stringify({\n          position: p\n        })\n      });\n\n      fetch('http://plato.mrl.ai:8080/contacts/remove', delHeaders).then(function (response) {\n        return response.json();\n      }).then(function (body) {\n        if (!body.error) {\n          var currentContacts = _this4.state.contacts.filter(function (v, i) {\n            return i !== p;\n          });\n\n          _this4.setState({\n            contacts: currentContacts\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, this.state.contacts.map(function (contact, i) {\n        return React.createElement(Card, {\n          key: i,\n          title: React.createElement(View, {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }\n          }, contact.name), React.createElement(View, {\n            style: {\n              flexGrow: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }\n          }), React.createElement(Text, {\n            style: {\n              color: 'red',\n              fontSize: 20,\n              cursor: 'pointer'\n            },\n            onPress: function onPress() {\n              return _this5.removeContact(i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }\n          }, \"\\xD7\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }\n        }, contact.number));\n      })));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  }\n});","map":{"version":3,"sources":["/Users/haze/dig4639-mobile-dev/project/screens/HomeScreen.js"],"names":["WebBrowser","React","Card","Icon","ScrollView","CONTACT_SCREEN","ADD_CONTACT_SCREEN","HEADERS","HomeScreen","props","state","contacts","currentScreen","newContactName","newContactNum","focusListener","navigation","addListener","componentDidMount","fetch","then","response","json","result","setState","newHeaders","method","body","JSON","stringify","name","number","p","delHeaders","position","error","currentContacts","filter","v","i","styles","container","contentContainer","map","contact","display","flexDirection","marginBottom","fontSize","flexGrow","color","cursor","removeContact","Component","navigationOptions","header","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser'\nimport * as React from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\nimport { Card, Icon } from 'react-native-elements'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst CONTACT_SCREEN = 0\nconst ADD_CONTACT_SCREEN = 1\nconst HEADERS = {\n  'method': 'GET',\n  'headers': {\n    'API': 'botts',\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n}\n\nexport default class HomeScreen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      contacts: [],\n      currentScreen: CONTACT_SCREEN,\n      newContactName: '',\n      newContactNum: ''\n    }\n    this.focusListener = props.navigation.addListener('focus', () => this.componentDidMount())\n  }\n\n  componentDidMount () {\n    //const { contact } = this.props.route.params\n    fetch('http://plato.mrl.ai:8080/contacts', HEADERS)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          contacts: result.contacts\n        })\n      })\n  }\n\n  addContact () {\n    const newHeaders = {\n      ...HEADERS,\n      method: 'POST',\n      body: JSON.stringify({ name: this.state.newContactName, number: this.state.newContactNum })\n    }\n    fetch('http://plato.mrl.ai:8080/contacts/add', newHeaders)\n      .then(response => response.json())\n      .then(() => this.setState({ currentScreen: CONTACT_SCREEN, newContactName: '', newContactNum: '' }))\n    this.componentDidMount()\n  }\n\n  removeContact (p) {\n    const delHeaders = {\n      ...HEADERS,\n      method: 'POST',\n      body: JSON.stringify({ position: p })\n    }\n    fetch('http://plato.mrl.ai:8080/contacts/remove', delHeaders)\n      .then(response => response.json())\n      .then((body) => {\n        if (!body.error) {\n          const currentContacts = this.state.contacts.filter((v, i) =>\n            (i !== p))\n          this.setState({ contacts: currentContacts })\n        }\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          {this.state.contacts.map((contact, i) =>\n            <Card key={i}\n              title={\n                <View style={{ display: 'flex', flexDirection: 'row', marginBottom: 10 }}>\n                  <Text style={{ fontSize: 20 }}>{contact.name}</Text>\n                  <View style={{ flexGrow: 1 }} />\n                  <Text style={{ color: 'red', fontSize: 20, cursor: 'pointer' }} onPress={() => this.removeContact(i)}>&times;</Text>\n                </View>\n              }>\n              <Text>{contact.number}</Text>\n            </Card>\n          )}\n        </ScrollView>\n      </>\n    )\n  }\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}