{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/haze/dig4639-mobile-dev/project/screens/AddContact.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Input, Button } from 'react-native-elements';\n\nvar AddContact = function (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  var _super = _createSuper(AddContact);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      submitDisabled: true,\n      contactName: '',\n      contactNumber: ''\n    };\n    _this.focusListener = props.navigation.addListener('focus', function () {\n      return _this.setState({\n        contactName: '',\n        contactNumber: ''\n      });\n    });\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"handleNameInput\",\n    value: function handleNameInput(text) {\n      if (text.length > 0) {\n        this.setState({\n          contactName: text\n        });\n      } else {\n        this.setState({\n          submitDisabled: true\n        });\n      }\n    }\n  }, {\n    key: \"handleNumInput\",\n    value: function handleNumInput(text) {\n      if (this.state.contactName.length > 0 && text.length > 0) {\n        this.setState({\n          submitDisabled: false,\n          contactNumber: text\n        });\n      } else {\n        this.setState({\n          submitDisabled: true\n        });\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var _this2 = this;\n\n      fetch('http://plato.mrl.ai:8080/contacts/add', {\n        method: 'POST',\n        headers: {\n          API: 'botts',\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.contactName,\n          number: this.state.contactNumber\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (body) {\n        if (!body.error) {\n          _this2.setState({\n            contactName: '',\n            contactNumber: ''\n          });\n\n          _this2.props.navigation.navigate('home');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Name\"), React.createElement(Input, {\n        placholder: \"Name\",\n        onChangeText: function onChangeText(text) {\n          return _this3.handleNameInput(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Number\"), React.createElement(Input, {\n        placholder: \"Number\",\n        onChangeText: function onChangeText(text) {\n          return _this3.handleNumInput(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      })), React.createElement(Button, {\n        title: \"Add Contact\",\n        onPress: function onPress() {\n          return _this3.add();\n        },\n        disabled: this.state.submitDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Back\",\n        buttonStyle: {\n          backgroundColor: '#ff483b'\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"home\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport { AddContact as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  }\n});","map":{"version":3,"sources":["/Users/haze/dig4639-mobile-dev/project/screens/AddContact.js"],"names":["React","ScrollView","Input","Button","AddContact","props","state","submitDisabled","contactName","contactNumber","focusListener","navigation","addListener","setState","text","length","fetch","method","headers","API","Accept","body","JSON","stringify","name","number","then","res","json","error","navigate","styles","container","contentContainer","margin","handleNameInput","handleNumInput","add","backgroundColor","Component","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { Input, Button } from 'react-native-elements'\n\nexport default class AddContact extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      submitDisabled: true,\n      contactName: '',\n      contactNumber: ''\n    }\n    this.focusListener = props.navigation.addListener('focus', () => this.setState({ contactName: '', contactNumber: '' }))\n  }\n\n  handleNameInput (text) {\n    if (text.length > 0) {\n      this.setState({ contactName: text })\n    } else {\n      this.setState({ submitDisabled: true })\n    }\n  }\n\n  handleNumInput (text) {\n    if (this.state.contactName.length > 0 && text.length > 0) {\n      this.setState({\n        submitDisabled: false,\n        contactNumber: text\n      })\n    } else {\n      this.setState({ submitDisabled: true })\n    }\n  }\n\n  add () {\n    fetch('http://plato.mrl.ai:8080/contacts/add', {\n      method: 'POST',\n      headers: {\n        API: 'botts',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ name: this.state.contactName, number: this.state.contactNumber })\n    })\n      .then(res => res.json())\n      .then(body => {\n        if (!body.error) {\n          this.setState({ contactName: '', contactNumber: '' })\n          this.props.navigation.navigate('home')\n        }\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          <Text style={{ margin: 10 }}>Name</Text>\n          <Input\n            placholder=\"Name\"\n            onChangeText={text => this.handleNameInput(text)}\n          />\n          <Text style={{ margin: 10 }}>Number</Text>\n          <Input\n            placholder='Number'\n            onChangeText={text => this.handleNumInput(text)}\n          />\n        </ScrollView>\n        <Button title='Add Contact' onPress={() => this.add()} disabled={this.state.submitDisabled} />\n        <Button title='Back' buttonStyle={{ backgroundColor: '#ff483b' }} onPress={() => this.props.navigation.navigate(\"home\")} />\n      </>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  }\n})"]},"metadata":{},"sourceType":"module"}