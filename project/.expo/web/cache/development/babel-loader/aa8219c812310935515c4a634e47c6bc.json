{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/haze/dig4639-mobile-dev/project/screens/Profile.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-elements';\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      userName: '',\n      numContacts: ''\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://plato.mrl.ai:8080/profile', {\n        method: 'GET',\n        headers: {\n          API: 'botts',\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (body) {\n        _this2.setState({\n          userName: body.name,\n          numContacts: body.count\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, this.state.userName !== '' ? React.createElement(Card, {\n        title: this.state.userName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Number of Contacts: \", this.state.numContacts)) : null);\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nexport { Profile as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  }\n});","map":{"version":3,"sources":["/Users/haze/dig4639-mobile-dev/project/screens/Profile.js"],"names":["Ionicons","WebBrowser","React","ScrollView","Card","Profile","props","state","userName","numContacts","fetch","method","headers","API","Accept","then","res","json","body","setState","name","count","styles","container","contentContainer","textAlign","Component","StyleSheet","create","flex","backgroundColor","paddingTop"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,IAAT,QAAqB,uBAArB;;IAEqBC,O;;;;;AACnB,mBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFkB;AAMnB;;;;wCAEoB;AAAA;;AACnBC,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,OADE;AAEP,0BAAgB,kBAFT;AAGPC,UAAAA,MAAM,EAAE;AAHD;AAF+B,OAArC,CAAL,CAQGC,IARH,CAQQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OARX,EASGF,IATH,CASQ,UAAAG,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAAEU,IAAI,CAACE,IAAjB;AAAuBX,UAAAA,WAAW,EAAES,IAAI,CAACG;AAAzC,SAAd;AACD,OAXH;AAYD;;;6BAES;AACR,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAqC,QAAA,qBAAqB,EAAED,MAAM,CAACE,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKjB,KAAL,CAAWC,QAAX,KAAwB,EAAzB,GACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEiB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2D,KAAKlB,KAAL,CAAWE,WAAtE,CADA,CADJ,GAII,IANR,CADF;AAWD;;;;EApCkCP,KAAK,CAACwB,S;;SAAtBrB,O;AAuCrB,IAAMiB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BN,EAAAA,gBAAgB,EAAE;AAChBO,IAAAA,UAAU,EAAE;AADI;AALa,CAAlB,CAAf","sourcesContent":["import { Ionicons } from '@expo/vector-icons'\nimport * as WebBrowser from 'expo-web-browser'\nimport * as React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { Card } from 'react-native-elements'\n\nexport default class Profile extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userName: '',\n      numContacts: ''\n    }\n  }\n\n  componentDidMount () {\n    fetch('http://plato.mrl.ai:8080/profile', {\n      method: 'GET',\n      headers: {\n        API: 'botts',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.setState({ userName: body.name, numContacts: body.count })\n      })\n  }\n\n  render () {\n    return (\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        {\n          (this.state.userName !== '')\n            ? <Card title={this.state.userName}>\n              <Text style={{ textAlign: 'center' }}>Number of Contacts: {this.state.numContacts}</Text>\n            </Card>\n            : null\n        }\n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  }\n})\n"]},"metadata":{},"sourceType":"module"}